#include <bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
#define endl '\n'
#define fr(i,a,b) for(ll i=a; i<b; i++)
#define fr1(i,a,b) for(ll i=a; i>=b; i--)
#define ll long long int
#define ld long double
#define vi vector<ll>
#define vii vector <pair<ll,ll> >
#define viii vector <pair<ll,pair<ll,ll> > >
#define pb push_back
#define all(v) (v).begin(),(v).end()
#define mp(i,j) make_pair(i,j)
#define fi first
#define se second
#define input(a,n) fr(i,0,n)cin>>a[i]
#define output(a,n) fr(i,0,n)cout<<a[i]<<" "
#define dbg cout<<"hurr"<<endl;
#define dbg2 cout<<"hurr2"<<endl;
#define md 1000000007
#define inf 999999999999999999
#define sp << " " <<
#define pi 3.14159265358979323846
#define fixd(x) cout << fixed << setprecision(x);
#define sz size()

int minkey(int key[],int v,int mst[])
{
	int min=INT_MAX,ans;
	for (int i = 0; i < v; ++i)
	{
		if(!mst[i] && key[i]<min)
		{
			min=key[i];
			ans=i;
		}
	}
	return ans;
}

int main()
{
	int v;
	cin >> v;
	int graph[v][v];
	for (int i = 0; i < v; ++i)
		for (int j = 0; j < v; ++j)
			cin >> graph[i][j];
	int par[v],key[v],mst[v];
	for (int i = 0; i < v; ++i)
	{
		key[i]=INT_MAX;
		par[i]=-1;
		mst[i]=0;
	}
	key[0]=0;
	for (int i = 1; i < v; ++i)
	{
		int x=minkey(key,v,mst);
		mst[x]=1;
		for(int j=0;j<v;j++)
		{
			if(!mst[j] && graph[x][j] && graph[x][j]<key[j])
			{
				key[j]=graph[x][j];
				par[j]=x;
			}
		}
	}
	for (int i = 1; i < v; ++i)
	{
		cout << par[i] << "-" << i << ": " << graph[i][par[i]] << endl;
	}
}
