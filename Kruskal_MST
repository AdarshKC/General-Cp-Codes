#include <bits/stdc++.h>
using namespace std;

map <int,int> par,rank;

int find(int x)
{
    if(par[x]!=x)
        par[x]=find(par[x]);
    return par[x];
}

void union_(int x,int y)
{
    x=find(x);
    y=find(y);
    if(rank[x]<rank[y])
        par[x]=y;
    else if(rank[x]>rank[y])
        par[y]=x;
    else
    {
        par[x]=y;
        rank[y]++;
    }
}

int main()
{
    int n,e,u,v,w=0;
    cin >> n;
    for (int i = 0; i < n; ++i)
    {
        par[i]=i;
        rank[i]=0;
    }
    cin >> e;
    vector <pair<int,pair<int,int> > > edge; 
    vector <pair<int,int> > ans;
    for(int i = 0; i < e; ++i)
    {
        cin >> u >> v >> w;
        edge.push_back(make_pair(w,make_pair(u,v)));
    }
    sort(edge.begin(),edge.end());
    for(int i=0;i<e;i++)
    {
        int x=edge[i].second.first;
        int y=edge[i].second.second;
        x=find(x);
        y=find(y);
        if(x==y)
            continue;
        union_(x,y);
        w++;
        ans.push_back(make_pair(x,y));
        if(w==n-1)
            break;
    }
    for(int i=0;i<ans.size();i++)
        cout << ans[i].first << " " << ans[i].second << endl;
}
